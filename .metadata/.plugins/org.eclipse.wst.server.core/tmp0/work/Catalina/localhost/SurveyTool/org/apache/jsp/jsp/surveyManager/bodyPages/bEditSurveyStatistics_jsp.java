/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.27
 * Generated at: 2016-10-08 13:07:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.surveyManager.bodyPages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import ilu.surveytool.language.Language;
import ilu.surveytool.constants.Address;
import ilu.surveytool.databasemanager.DataObject.Question;
import java.util.List;
import java.util.ArrayList;
import java.sql.Timestamp;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import java.util.Iterator;
import ilu.surveytool.databasemanager.constants.DBConstants;
import ilu.surveytool.databasemanager.ResponsesDB;
import ilu.surveytool.constants.Attribute;
import java.util.HashMap;
import java.util.Map;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import ilu.surveytool.databasemanager.DataObject.Survey;
import ilu.surveytool.databasemanager.DataObject.Page;
import ilu.surveytool.databasemanager.DataObject.Section;
import ilu.surveymanager.statistics.Statistics;
import ilu.surveymanager.statistics.StatisticsQuestion;
import ilu.surveymanager.handler.SurveysHandler;

public final class bEditSurveyStatistics_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("ilu.surveymanager.statistics.StatisticsQuestion");
    _jspx_imports_classes.add("ilu.surveytool.constants.Address");
    _jspx_imports_classes.add("java.util.Iterator");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("java.sql.Timestamp");
    _jspx_imports_classes.add("ilu.surveymanager.statistics.Statistics");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("ilu.surveytool.databasemanager.ResponsesDB");
    _jspx_imports_classes.add("java.util.HashMap");
    _jspx_imports_classes.add("ilu.surveytool.databasemanager.DataObject.Question");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("ilu.surveymanager.handler.SurveysHandler");
    _jspx_imports_classes.add("java.util.concurrent.TimeUnit");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("ilu.surveytool.language.Language");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("ilu.surveytool.databasemanager.DataObject.Survey");
    _jspx_imports_classes.add("ilu.surveytool.databasemanager.constants.DBConstants");
    _jspx_imports_classes.add("ilu.surveytool.databasemanager.DataObject.Page");
    _jspx_imports_classes.add("ilu.surveytool.constants.Attribute");
    _jspx_imports_classes.add("java.text.DateFormat");
    _jspx_imports_classes.add("ilu.surveytool.databasemanager.DataObject.Section");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tsurveyTree = ");
      out.print( request.getAttribute(Attribute.s_JSON_PAGES) );
      out.write(";\r\n");
      out.write("</script>\r\n");
      out.write("<!--<script language=\"JavaScript\" src=\"http://www.geoplugin.net/javascript.gp\" type=\"text/javascript\"></script> Esto es para obtener la IP y la localizaciÃ³n -->\r\n");

Survey survey = (Survey) request.getAttribute(Attribute.s_SURVEY_INFO);
SurveysHandler surveysHandler = new SurveysHandler();

Language lang = new Language(getServletContext().getRealPath("/")); 
String languageId = Language.getLanguageRequest(request);
lang.loadLanguage(languageId);
//System.out.println("String language default: "+survey.getDefaultLanguage());

String titlesurvey = "";
if(survey!=null && survey.getContents()!=null && survey.getContents().get(DBConstants.s_VALUE_CONTENTTYPE_NAME_TITLE)!=null && !survey.getContents().get(DBConstants.s_VALUE_CONTENTTYPE_NAME_TITLE).getText().equals("")){
	titlesurvey = survey.getContents().get(DBConstants.s_VALUE_CONTENTTYPE_NAME_TITLE).getText();
}

Statistics surveyStatistic = surveysHandler.createStatistics(survey.getSurveyId(), languageId, survey.getDefaultLanguage());

      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container-fluid\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t  \t\t\t\t<div class=\"title-content-no-underline\">\r\n");
      out.write("\t  \t\t\t\t\t<h2 id=\"title-header-edit\"><a href=\"InitialServlet\">");
      out.print( lang.getContent("user_panel.title") );
      out.write("</a> > <a href=\"UserPanelHomeServlet?upoption=surveys\">");
      out.print( lang.getContent("survey_manager.title") );
      out.write("</a> > ");
      out.print( lang.getContent("survey.statistic.title") );
      out.write("</h2>\r\n");
      out.write("\t  \t\t\t\t\t<ul class=\"nav nav-tabs nav-tabs-right nav-tab-edit\">\t\t\t\t\t\t  \t\r\n");
      out.write("\t\t\t\t\t\t  \t<!-- <li role=\"presentation\" class=\"statistic-tab active\" id=\"statistic-tab\"><a href=\"#\" aria-label=\"");
      out.print( lang.getContent("survey.edit.tab.go_statistics") );
      out.write("\" title=\"");
      out.print( lang.getContent("survey.edit.tab.go_statistics") );
      out.write("\" id=\"tab-display-statistics\"><i class=\"fa fa-bar-chart fa-2x\"></i></a></li>\r\n");
      out.write("\t\t\t\t\t\t  \t<li role=\"presentation\" class=\"share-tab\" id=\"share-tab\"><a href=\"#\" title=\"");
      out.print( lang.getContent("survey.edit.tab.go_edit") );
      out.write("\"><i class=\"fa fa-share-alt fa-2x\"></i></a></li>\r\n");
      out.write("\t\t\t\t\t\t  \t<li role=\"presentation\" class=\"edit-tab\" id=\"edit-tab\"><a href=\"SurveysServlet?surveyid=");
      out.print(survey.getSurveyId());
      out.write("\" aria-label=\"");
      out.print( lang.getContent("survey.edit.tab.go_edit") );
      out.write("\" title=\"");
      out.print( lang.getContent("survey.edit.tab.go_edit") );
      out.write("\" id=\"tab-display-questions\"><i class=\"fa fa-pencil-square-o fa-2x\"></i></a></li> -->\r\n");
      out.write("\t\t\t\t\t\t  \t<li role=\"presentation\" class=\"statistic-tab active\" id=\"statistic-tab\"><a href=\"SurveyStatisticServlet?surveyid=");
      out.print(survey.getSurveyId());
      out.write("\" aria-label=\"");
      out.print( lang.getContent("survey.edit.tab.go_statistics") );
      out.write("\" title=\"");
      out.print( lang.getContent("survey.edit.tab.go_statistics") );
      out.write("\" id=\"tab-display-statistics\"><i class=\"fa fa-bar-chart fa-2x\"></i></a></li>\r\n");
      out.write("\t\t\t\t\t\t  \t<li role=\"presentation\" class=\"share-tab\" id=\"share-tab\"><a href=\"SurveysFees?surveyid=");
      out.print(survey.getSurveyId() );
      out.write("\" title=\"");
      out.print( lang.getContent("survey.edit.tab.go_edit") );
      out.write("\"><i class=\"fa fa-users fa-2x\"></i></a></li>\r\n");
      out.write("\t\t\t\t\t\t  \t<li role=\"presentation\" class=\"edit-tab\" id=\"edit-tab\"><a href=\"SurveysServlet?surveyid=");
      out.print(survey.getSurveyId());
      out.write("\" aria-label=\"");
      out.print( lang.getContent("survey.edit.tab.go_edit") );
      out.write("\" title=\"");
      out.print( lang.getContent("survey.edit.tab.go_edit") );
      out.write("\" id=\"tab-display-questions\"><i class=\"fa fa-pencil-square-o fa-2x\"></i></a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t  \t\t\t\t</div>\r\n");
      out.write("\t  \t\t\t\t\r\n");
      out.write("\t  \t\t\t\t<div class=\"content-box-tabs edit-content\">\r\n");
      out.write("\t  \t\t\t\t\t\t\r\n");
      out.write("\t  \t\t\t\t\t\t<div class=\"survey-statistics-title\">\r\n");
      out.write("\t\t  \t\t\t\t\t\t<div class=\"col-md-10 col-md-offset-2\">\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t<h3> ");
      out.print( titlesurvey );
      out.write("</h3>\r\n");
      out.write("\t\t\t  \t\t\t\t\t</div>\t\r\n");
      out.write("\t\t  \t\t\t\t\t</div>\t\r\n");
      out.write("\t  \t\t\t\t\t\t\r\n");
      out.write("\t  \t\t\t\t\t\t\t\t\r\n");
      out.write("<div id=\"statistics\">\r\n");
      out.write("\t<div class=\"main-sidebar\">\r\n");
      out.write("\t\t<ul class=\"sidebar-menu\">\r\n");
      out.write("        \t<li class=\"treeview active\" id=\"general-menu\"><a href=\"#\">");
      out.print( lang.getContent("statistics.menu.general"));
      out.write("</a></li>\r\n");
      out.write("        \t<li class=\"treeview\">\r\n");
      out.write("          \t\t<span>");
      out.print( lang.getContent("statistics.menu.questions"));
      out.write("</span>\r\n");
      out.write("          \t\t\r\n");
      out.write("          \t\t<select class=\"form-control\" id=\"statistics-questions-menu\">\r\n");
      out.write("          \t\t\t<option value=\"question-0\" selected>");
      out.print( lang.getContent("statistics.menu.default"));
      out.write("</option>\r\n");
      out.write("          \t\t");

          		for(Section section : survey.getSections()){
					for(Page pag : section.getPages()){
						for(Question question : pag.getQuestions()){
							if(!question.getQuestionType().equals(DBConstants.s_VALUE_QUESTIONTYPE_BCONTENT)){
								String title = "";
								if(question!=null &&  question.getContents()!=null && question.getContents().get(DBConstants.s_VALUE_CONTENTTYPE_NAME_TITLE)!=null){
									title = question.getContents().get(DBConstants.s_VALUE_CONTENTTYPE_NAME_TITLE).getText();
								}
								
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<option value=\"");
      out.print( "question-"+question.getQuestionId() );
      out.write('"');
      out.write('>');
      out.print( title );
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t");

							}
						}
					}
				}
          		
      out.write("\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("        \t</li> \r\n");
      out.write("      \t</ul>\r\n");
      out.write("  \t</div>\r\n");
      out.write("  \t\r\n");
      out.write("  <div class=\"content-wrapper\">\r\n");
      out.write("      <div class=\"content-statistics\" id=\"general-info\">\r\n");
      out.write("\t      <div class=\"row\">\r\n");
      out.write("\t        <div class=\"col-md-4\">\r\n");
      out.write("\t          <div class=\"small-box bg-aqua\">\r\n");
      out.write("\t            <div class=\"inner\">\r\n");
      out.write("\t              <h3 aria-hidden=\"true\">");
      out.print( surveyStatistic.getNumVisits());
      out.write("</h3>\r\n");
      out.write("\t              <p>");
      out.print( lang.getContent("statistics.boxes.numStarted"));
      out.write("</p><span class=\"visuallyhidden\">: ");
      out.print( surveyStatistic.getNumVisits());
      out.write("</span>\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t          </div>\r\n");
      out.write("\t        </div>\r\n");
      out.write("\t        \r\n");
      out.write("\t        <div class=\"col-md-4\">\r\n");
      out.write("\t          <div class=\"small-box bg-green\">\r\n");
      out.write("\t            <div class=\"inner\">\r\n");
      out.write("\t            \t<h3 aria-hidden=\"true\">");
      out.print((int)(surveyStatistic.getNumCompleteMandatoryResponses()) );
      out.write("</h3>\r\n");
      out.write("\t              <p>");
      out.print( lang.getContent("statistics.boxes.numAnswers"));
      out.write("</p><span class=\"visuallyhidden\">: ");
      out.print((int)(surveyStatistic.getNumCompleteMandatoryResponses()) );
      out.write("</span>\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t          </div>\r\n");
      out.write("\t        </div>\r\n");
      out.write("\t         \r\n");
      out.write("\t        <div class=\"col-md-4\">\r\n");
      out.write("\t          <div class=\"small-box bg-red\">\r\n");
      out.write("\t            <div class=\"inner\">\r\n");
      out.write("\t               ");

	            if(surveyStatistic.getNumVisits()>0){
	            	//System.out.println(surveyStatistic.getNumCompleteMandatoryResponses());
	            
      out.write("\r\n");
      out.write("\t              <h3 aria-hidden=\"true\">");
      out.print( (int)((surveyStatistic.getNumCompleteMandatoryResponses()*1.0/surveyStatistic.getNumVisits()*1.0)*100) );
      out.write("<sup>%</sup></h3>\r\n");
      out.write("\t              <p>");
      out.print( lang.getContent("statistics.boxes.bounceRateStarted"));
      out.write("</p><span class=\"visuallyhidden\">: ");
      out.print( (int)((surveyStatistic.getNumCompleteMandatoryResponses()*1.0/surveyStatistic.getNumVisits()*1.0)*100) );
      out.write("<sup>%</sup></span>\r\n");
      out.write("\t            ");

	            } else{
	            
      out.write("\r\n");
      out.write("\t              <h3 aria-hidden=\"true\"> - <sup>%</sup></h3>\r\n");
      out.write("\t              <p>");
      out.print( lang.getContent("statistics.boxes.bounceRateStarted"));
      out.write("</p><span class=\"visuallyhidden\">: 0%</span>\r\n");
      out.write("\t            ");

	            }
	            
      out.write("\r\n");
      out.write("\t              \r\n");
      out.write("\t            </div>\r\n");
      out.write("\t          </div>\r\n");
      out.write("\t        </div>\r\n");
      out.write("\t          \r\n");
      out.write("\t      </div>\r\n");
      out.write("\t      \r\n");
      out.write("\t      <div class=\"row\">\r\n");
      out.write("\t      \t<section class=\"col-md-6 connectedSortable ui-sortable\">\r\n");
      out.write("\t      \t\t<div class=\"nav-tabs-custom no-block\">\r\n");
      out.write("\t            \t<!-- Tabs within a box -->\r\n");
      out.write("\t            \t<p class=\"graph-title  no-block\">");
      out.print( lang.getContent("statistics.boxes.numStarted"));
      out.write("</p>\r\n");
      out.write("\t            \t<span class=\"visuallyhidden\">\r\n");
      out.write("\t\t\t\t\t");

							
							String[][] data = surveyStatistic.groupVisitsByDay(10);
							for(int i = 0; i<data.length;i++){
								//System.out.println(i);
								
      out.write("\r\n");
      out.write("\t\t        \t\t    \t");
      out.print(data[i][0]);
      out.write(',');
      out.write(' ');
      out.print( lang.getContent("statistics.boxes.numStarted"));
      out.write(':');
      out.write(' ');
      out.print(data[i][1]);
if(i<data.length-1){
      out.print("\n");
}
      out.write("\r\n");
      out.write("\t\t        \t\t    \t");

							}
							
      out.write("\r\n");
      out.write("\t\t\t\t\t</span>\r\n");
      out.write("\t            \t<div class=\"tab-content no-padding  no-block\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"chart tab-pane active\" id=\"visits-chart\">\r\n");
      out.write("\t\t              \t\t<canvas id=\"visits\" width=\"550\" height=\"250\" style=\"width: 550px; height: 250px;\"></canvas>\r\n");
      out.write("\t\t\t\t\t\t\t<script>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\tvar labels = [];\r\n");
      out.write("\t\t\t\t\t\t\t\tvar data = [];\r\n");
      out.write("\t\t\t\t\t\t\t");

							
							for(int i = 0; i<data.length;i++){
								//System.out.println(i);
								
      out.write("\r\n");
      out.write("\t\t        \t\t    \tlabels.push(\"");
      out.print(data[i][0]);
      out.write("\");\r\n");
      out.write("\t\t        \t\t    \tdata.push(");
      out.print(data[i][1]);
      out.write(");\r\n");
      out.write("\t\t        \t\t    \t");

							}
							
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t  var data = {\r\n");
      out.write("\t\t\t\t\t\t\t\t    labels: labels,\r\n");
      out.write("\t\t\t\t\t\t\t\t    datasets: [\r\n");
      out.write("\t\t\t\t\t\t\t\t      {\r\n");
      out.write("\t\t\t\t\t\t\t\t        fillColor: \"rgba(0,0,0,0)\",\r\n");
      out.write("\t\t\t\t\t\t\t\t        strokeColor: \"#007593\",\r\n");
      out.write("\t\t\t\t\t\t\t\t        pointColor: \"#007593\",\r\n");
      out.write("\t\t\t\t\t\t\t\t        pointStrokeColor: \"#fff\",\r\n");
      out.write("\t\t\t\t\t\t\t\t        pointHighlightFill: \"#fff\",\r\n");
      out.write("\t\t\t\t\t\t\t\t        pointHighlightStroke: \"#007593\",\r\n");
      out.write("\t\t\t\t\t\t\t\t        data: data\r\n");
      out.write("\t\t\t\t\t\t\t\t      }\r\n");
      out.write("\t\t\t\t\t\t\t\t    ]\r\n");
      out.write("\t\t\t\t\t\t\t\t  };\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t  var ctx = document.getElementById(\"visits\").getContext(\"2d\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t  var myChart = new Chart(ctx).Line(data, {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t  tooltipCaretSize: 0\r\n");
      out.write("\t\t\t\t\t\t\t\t\t  });\r\n");
      out.write("\t\t\t\t\t\t\t\t  \r\n");
      out.write("\t\t\t\t\t\t\t</script>\r\n");
      out.write("\t\t\t\t\t\t</div>\t            \t\r\n");
      out.write("\t            \t\r\n");
      out.write("\t\t             \r\n");
      out.write("\t\t              </div>\r\n");
      out.write("\t            \t</div>\r\n");
      out.write("\t      \t</section>\r\n");
      out.write("\t      \t<section class=\"col-md-6 connectedSortable ui-sortable\">\r\n");
      out.write("\t      \t\t<div class=\"nav-tabs-custom no-block\">\r\n");
      out.write("\t            \t<!-- Tabs within a box -->\r\n");
      out.write("\t            \t<p class=\"graph-title no-block\">");
      out.print( lang.getContent("statistics.boxes.numAnswers"));
      out.write("</p>\r\n");
      out.write("\t            \t<span class=\"visuallyhidden\">\r\n");
      out.write("\t\t\t\t\t");

					data = surveyStatistic.groupCompletedByDay(10);
							for(int i = 0; i<data.length;i++){
								//System.out.println(i);
								
      out.write("\r\n");
      out.write("\t\t        \t\t    \t");
      out.print(data[i][0]);
      out.write(',');
      out.write(' ');
      out.print( lang.getContent("statistics.boxes.numAnswers"));
      out.write(':');
      out.write(' ');
      out.print(data[i][1]);
if(i<data.length-1){
      out.print("\n");
}
      out.write("\r\n");
      out.write("\t\t        \t\t    \t");

							}
							
      out.write("\r\n");
      out.write("\t\t\t\t\t</span>\r\n");
      out.write("\t            \t<div class=\"tab-content no-padding no-block\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"chart tab-pane active\" id=\"responses-chart\">\r\n");
      out.write("\t\t              \t\t<canvas id=\"responses\" width=\"550\" height=\"250\" style=\"width: 550px; height: 250px;\"></canvas>\r\n");
      out.write("\t\t\t\t\t\t\t<script>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\tvar labels = [];\r\n");
      out.write("\t\t\t\t\t\t\t\tvar dataMandatory = [];\r\n");
      out.write("\t\t\t\t\t\t\t");

							
							
							for(int i = 0; i<data.length;i++){
								//System.out.println(i);
								
      out.write("\r\n");
      out.write("\t\t        \t\t    \tlabels.push(\"");
      out.print(data[i][0]);
      out.write("\");\r\n");
      out.write("\t\t        \t\t    \tdataMandatory.push(");
      out.print(data[i][1]);
      out.write(");\r\n");
      out.write("\t\t        \t\t    \t");

							}
							
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t var data = {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    labels: labels,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    datasets: [\r\n");
      out.write("\t\t\t\t\t\t\t\t\t      {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t        label: \"");
      out.print( lang.getContent("statistics.boxes.numAnswersMand"));
      out.write("\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t        showInLegend: true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t        fillColor: \"rgba(0,0,0,0)\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t        strokeColor: \"#00884b\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t        pointColor: \"#00884b\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t        pointStrokeColor: \"#fff\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t        pointHighlightFill: \"#fff\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t        pointHighlightStroke: \"#00884b\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t        data: dataMandatory\r\n");
      out.write("\t\t\t\t\t\t\t\t\t      }\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    ]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t  };\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t // Get the context of the canvas element we want to select\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar ctx = document.getElementById(\"responses\").getContext(\"2d\");\r\n");
      out.write("\t\t\t\t\t\t\t\t  \r\n");
      out.write("\t\t\t\t\t\t\t\t  //don't forget to pass options in when creating new Chart\r\n");
      out.write("\t\t\t\t\t\t\t\t  var lineChart = new Chart(ctx).Line(data, {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t  tooltipCaretSize: 0\r\n");
      out.write("\t\t\t\t\t\t\t\t  });\r\n");
      out.write("\t\t\t\t\t\t\t\t\t  \r\n");
      out.write("\t\t\t\t\t\t\t\t\t  \r\n");
      out.write("\t\t\t\t\t\t\t</script>\r\n");
      out.write("\t\t\t\t\t\t</div>\t            \t\r\n");
      out.write("\t            \t\r\n");
      out.write("\t\t             \r\n");
      out.write("\t\t              </div>\r\n");
      out.write("\t          \t\t</div>\r\n");
      out.write("\t      \t\t</section>\r\n");
      out.write("\t    \t</div>\r\n");
      out.write("      \t</div>\r\n");
      out.write("      \r\n");
      out.write(" \t\t");
 
 		String token = "/";
 		for(Section section : survey.getSections()){
					for(Page pag : section.getPages()){
						for(Question question : pag.getQuestions()){
							if(!question.getQuestionType().equals(DBConstants.s_VALUE_QUESTIONTYPE_BCONTENT)){
								request.setAttribute(Attribute.s_QUESTION, question);
								request.setAttribute(Attribute.s_SURVEY_STATISTIC, surveyStatistic.getStatisticsByQuestion(question.getQuestionId()));
								//System.out.println(question.getQuestionId()+", "+question.getQuestionType()+", token + question.getStatisticsPage() -->"+token + question.getStatisticsPage());
	  							
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"content-statistics hidden\" id=\"single-question-");
      out.print( question.getQuestionId() );
      out.write("\">\r\n");
      out.write("\t  \t\t\t\t\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response,  token + question.getStatisticsPage()  + (( token + question.getStatisticsPage() ).indexOf('?')>0? '&': '?') + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("index", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf( question.getQuestionId() ), request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("    \t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t");

							}
						}
					}
          		}
          		
      out.write("     \r\n");
      out.write("      \t\r\n");
      out.write("    \r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t  \t\t\t</div>\r\n");

lang.close();

      out.write("\r\n");
      out.write("\t  \t\t\t\r\n");
      out.write("\t  \t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../frames/fNewQuestion.jsp", out, false);
      out.write("\r\n");
      out.write("\t  \t\t\t\r\n");
      out.write("\t  \t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../frames/fImportFile.jsp", out, false);
      out.write("\r\n");
      out.write("\t  \t\t\t\r\n");
      out.write("\t  \t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../frames/fUpdateFile.jsp", out, false);
      out.write("\r\n");
      out.write("\t  \t\t\t\r\n");
      out.write("\t  \t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../frames/fDeleteElement.jsp", out, false);
      out.write("\r\n");
      out.write("\t  \t\t\t  \t\t\t");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
