/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.27
 * Generated at: 2016-10-06 14:13:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.common.masterComponents;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import ilu.surveytool.constants.Attribute;
import ilu.surveytool.language.Language;
import java.util.List;

public final class head_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("ilu.surveytool.language.Language");
    _jspx_imports_classes.add("ilu.surveytool.constants.Attribute");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	String title = "";
	String pageTitle = (String) request.getAttribute(Attribute.s_PAGE_TITLE);
	if(pageTitle != null && !pageTitle.isEmpty()) title = ": " + pageTitle; 

      out.write("\r\n");
      out.write("\t\t<meta charset=\"utf-8\">\r\n");
      out.write("\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("\t\t<title>Survey Tool ");
      out.print( title );
      out.write("</title>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- CSS de Bootstrap -->\r\n");
      out.write("\t\t<link href=\"css/style.css\" rel=\"stylesheet\" media=\"screen\">\r\n");
      out.write("\t\t<link href=\"css/bootstrap-accessibility.css\" rel=\"stylesheet\" media=\"screen\">\r\n");
      out.write("\t\t<link href=\"css/bootstrap.css\" rel=\"stylesheet\" media=\"screen\">\r\n");
      out.write("\t\t<link href=\"font-awesome/css/font-awesome.min.css\" rel=\"stylesheet\" media=\"screen\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t");

	List<String> cssFiles = (List<String>) request.getAttribute(Attribute.s_CSS_FILES);
	if(cssFiles != null)
	{
		for(String cssFile : cssFiles)
		{
	
      out.write("\r\n");
      out.write("\t\t<link href=\"");
      out.print( cssFile );
      out.write("\" rel=\"stylesheet\" media=\"screen\">\r\n");
      out.write("\t");

		}
	}
	
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- librerías opcionales que activan el soporte de HTML5 para IE8 -->\r\n");
      out.write("\t\t<!--[if lt IE 9]>\r\n");
      out.write("\t\t  <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\r\n");
      out.write("\t\t  <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\r\n");
      out.write("\t\t<![endif]-->\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- Librería jQuery requerida por los plugins de JavaScript -->\r\n");
      out.write("\t\t<script src=\"js/jquery-2.1.4.js\"></script>\r\n");
      out.write("\t\t<script src=\"js/jquery-ui.js\"></script>\r\n");
      out.write("\t\t<script src=\"js/bootbox.js\"></script>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- Todos los plugins JavaScript de Bootstrap (también puedes\r\n");
      out.write("\t\t     incluir archivos JavaScript individuales de los únicos\r\n");
      out.write("\t\t     plugins que utilices) -->\r\n");
      out.write("\t\t     ");
Language lang = new Language(getServletContext().getRealPath("/")); 
				lang.loadLanguage(Language.getLanguageRequest(request));
				
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<script>\r\n");
      out.write("\t\t var textErrorPollOption = \"");
      out.print( lang.getContent("msg.error.poll.option") );
      out.write("\";\r\n");
      out.write("\t\t var textOption = \"");
      out.print( lang.getContent("survey.type.option") );
      out.write("\";\r\n");
      out.write("\t\t var textOptionFile = \"");
      out.print( lang.getContent("question.edit.files.option.title") );
      out.write("\";\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t var textQuotaTitleAlert = \"");
      out.print( lang.getContent("quota.add.warning.title") );
      out.write("\";\r\n");
      out.write("\t\t var textQuotaAlert = \"");
      out.print( lang.getContent("quota.add.warning.text") );
      out.write("\";\r\n");
      out.write("\t\t var textQuotaAlertBtn = \"");
      out.print( lang.getContent("quota.add.warning.button") );
      out.write("\";\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t </script>\r\n");
      out.write("\r\n");
      out.write("\t\t<script src=\"js/bootstrap.min.js\"></script>\r\n");
      out.write("\t\t<script src=\"js/bootstrap-accessibility.min.js\"></script>\r\n");
      out.write("\t\t<script src=\"js/stinterface.js\"></script>\r\n");
      out.write("\t\t<script src=\"js/stcheckforms.js\"></script>\r\n");
      out.write("\t");

	List<String> jsFiles = (List<String>) request.getAttribute(Attribute.s_JS_FILES);
	if(jsFiles != null)
	{
		for(String jsFile : jsFiles)
		{
	
      out.write("\r\n");
      out.write("\t\t<script src=\"");
      out.print( jsFile );
      out.write("\"></script>\r\n");
      out.write("\t");

		}
	}
	
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- Librería tabla dinamica -->\r\n");
      out.write("\t<!-- <link href=\"https://cdn.datatables.net/1.10.11/css/dataTables.bootstrap.min.css\" rel=\"stylesheet\" media=\"screen\"> -->\r\n");
      out.write("\t<script src=\"https://cdn.datatables.net/1.10.11/js/jquery.dataTables.min.js\"></script>\r\n");
      out.write("\t<script src=\"https://cdn.datatables.net/1.10.11/js/dataTables.bootstrap.min.js\"></script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
