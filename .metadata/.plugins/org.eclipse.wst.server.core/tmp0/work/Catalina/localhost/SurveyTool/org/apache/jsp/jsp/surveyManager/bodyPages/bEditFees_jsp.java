/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.27
 * Generated at: 2016-10-08 13:06:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.surveyManager.bodyPages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import ilu.surveytool.language.Language;
import ilu.surveytool.constants.Address;
import ilu.surveytool.databasemanager.DataObject.Question;
import java.util.List;
import ilu.surveytool.databasemanager.constants.DBConstants;
import ilu.surveytool.constants.Attribute;
import java.util.HashMap;
import ilu.surveytool.databasemanager.DataObject.LoginResponse;
import ilu.surveytool.databasemanager.DataObject.Page;
import ilu.surveytool.databasemanager.constants.DBConstants;
import ilu.surveytool.constants.Address;
import ilu.surveytool.databasemanager.DataObject.Section;
import ilu.surveytool.databasemanager.DataObject.Survey;
import ilu.surveytool.databasemanager.DataObject.Question;
import java.util.Map;
import java.util.ArrayList;
import ilu.surveytool.databasemanager.DataObject.Survey;
import ilu.surveytool.databasemanager.DataObject.Option;
import ilu.surveytool.databasemanager.DataObject.OptionsGroup;
import ilu.surveytool.databasemanager.DataObject.Quota;
import java.util.HashMap;

public final class bEditFees_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("ilu.surveytool.constants.Address");
    _jspx_imports_classes.add("ilu.surveytool.databasemanager.DataObject.Option");
    _jspx_imports_classes.add("ilu.surveytool.databasemanager.DataObject.LoginResponse");
    _jspx_imports_classes.add("java.util.HashMap");
    _jspx_imports_classes.add("ilu.surveytool.databasemanager.DataObject.Question");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("ilu.surveytool.databasemanager.DataObject.Quota");
    _jspx_imports_classes.add("ilu.surveytool.language.Language");
    _jspx_imports_classes.add("ilu.surveytool.databasemanager.DataObject.Survey");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("ilu.surveytool.databasemanager.constants.DBConstants");
    _jspx_imports_classes.add("ilu.surveytool.databasemanager.DataObject.OptionsGroup");
    _jspx_imports_classes.add("ilu.surveytool.databasemanager.DataObject.Page");
    _jspx_imports_classes.add("ilu.surveytool.constants.Attribute");
    _jspx_imports_classes.add("ilu.surveytool.databasemanager.DataObject.Section");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

				Survey survey = (Survey) request.getAttribute(Attribute.s_SURVEY_INFO);
				Survey surveyDefaultLanguage = (Survey) request.getAttribute(Attribute.s_SURVEY_INFO_DEFAULT_LANGUAGE);
				int pageId = (int) request.getAttribute(Attribute.s_PAGE_ID);
				String description = "";
				String descriptionplaceholder="";
				if(survey!=null && survey.getContents()!=null && survey.getContents().get(DBConstants.s_VALUE_CONTENTTYPE_NAME_DESCRIPTION)!=null && !survey.getContents().get(DBConstants.s_VALUE_CONTENTTYPE_NAME_DESCRIPTION).getText().equals("")){
					description = survey.getContents().get(DBConstants.s_VALUE_CONTENTTYPE_NAME_DESCRIPTION).getText();
				}else if(surveyDefaultLanguage!=null && surveyDefaultLanguage.getContents()!=null && surveyDefaultLanguage.getContents().get(DBConstants.s_VALUE_CONTENTTYPE_NAME_DESCRIPTION)!=null && !surveyDefaultLanguage.getContents().get(DBConstants.s_VALUE_CONTENTTYPE_NAME_DESCRIPTION).getText().equals("")){
					description = surveyDefaultLanguage.getContents().get(DBConstants.s_VALUE_CONTENTTYPE_NAME_DESCRIPTION).getText();
				}
				
				String title = "";
				String titleplaceholder = "";
				if(survey!=null && survey.getContents()!=null && survey.getContents().get(DBConstants.s_VALUE_CONTENTTYPE_NAME_TITLE)!=null && !survey.getContents().get(DBConstants.s_VALUE_CONTENTTYPE_NAME_TITLE).getText().equals("")){
					title = survey.getContents().get(DBConstants.s_VALUE_CONTENTTYPE_NAME_TITLE).getText();
				}else if(surveyDefaultLanguage!=null && surveyDefaultLanguage.getContents()!=null && surveyDefaultLanguage.getContents().get(DBConstants.s_VALUE_CONTENTTYPE_NAME_TITLE)!=null){
					title = surveyDefaultLanguage.getContents().get(DBConstants.s_VALUE_CONTENTTYPE_NAME_TITLE).getText();
				}
				
				Language lang = new Language(getServletContext().getRealPath("/")); 
				lang.loadLanguage(Language.getLanguageRequest(request));
				
				HttpSession sessions = request.getSession(false); 
  				LoginResponse loginResp = (LoginResponse)sessions.getAttribute(Attribute.s_USER_SESSION_INFO);
  				HashMap<Integer, Integer> listIdQuestion = new HashMap();
  				int indexquestion = 0;
				
      out.write("\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\t\t\t\tloadquotas('");
      out.print(request.getAttribute(Attribute.s_JSON_QUOTAS));
      out.write("');\r\n");
      out.write("\t\t\t\t</script>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t<div class=\"container-fluid\">\r\n");
      out.write("\t  \t\t\t\t<div class=\"title-content-no-underline\">\r\n");
      out.write("\t  \t\t\t\t\t<h2><a href=\"InitialServlet\">");
      out.print( lang.getContent("user_panel.title") );
      out.write("</a> > <a href=\"UserPanelHomeServlet?upoption=surveys\">");
      out.print( lang.getContent("survey_manager.title") );
      out.write("</a> > ");
      out.print( lang.getContent("quota.edit.title") );
      out.write("</h2>\r\n");
      out.write("\t  \t\t\t\t\t<ul class=\"nav nav-tabs nav-tabs-right nav-tab-edit\">\t\t\t\t\t\t  \t\r\n");
      out.write("\t\t\t\t\t\t  \t<!-- <li role=\"presentation\" class=\"statistic-tab\"><a href=\"#\" aria-label=\"go to survey statistics\" title=\"go to survey statistics\"><i class=\"fa fa-bar-chart fa-2x\"></i></a></li>\r\n");
      out.write("\t\t\t\t\t\t  \t<li role=\"presentation\" class=\"share-tab active\"><a href=\"#\" title=\"go to share survey\"><i class=\"fa fa-share-alt fa-2x\"></i></a></li>\r\n");
      out.write("\t\t\t\t\t\t  \t<li role=\"presentation\" class=\"edit-tab\"><a href=\"SurveysServlet?surveyid=");
      out.print(survey.getSurveyId() );
      out.write("\" aria-label=\"");
      out.print( lang.getContent("survey.edit.tab.go_edit") );
      out.write("\" title=\"");
      out.print( lang.getContent("survey.edit.tab.go_edit") );
      out.write("\"><i class=\"fa fa-pencil-square-o fa-2x\"></i></a></li> -->\r\n");
      out.write("\t\t\t\t\t\t  \t<li role=\"presentation\" class=\"statistic-tab\" id=\"statistic-tab\"><a href=\"SurveyStatisticServlet?surveyid=");
      out.print(survey.getSurveyId());
      out.write("\" aria-label=\"");
      out.print( lang.getContent("survey.edit.tab.go_statistics") );
      out.write("\" title=\"");
      out.print( lang.getContent("survey.edit.tab.go_statistics") );
      out.write("\" id=\"tab-display-statistics\"><i class=\"fa fa-bar-chart fa-2x\"></i></a></li>\r\n");
      out.write("\t\t\t\t\t\t  \t<li role=\"presentation\" class=\"share-tab active\" id=\"share-tab\"><a href=\"SurveysFees?surveyid=");
      out.print(survey.getSurveyId() );
      out.write("\" title=\"");
      out.print( lang.getContent("survey.edit.tab.go_edit") );
      out.write("\"><i class=\"fa fa-users fa-2x\"></i></a></li>\r\n");
      out.write("\t\t\t\t\t\t  \t<li role=\"presentation\" class=\"edit-tab\" id=\"edit-tab\"><a href=\"SurveysServlet?surveyid=");
      out.print(survey.getSurveyId());
      out.write("\" aria-label=\"");
      out.print( lang.getContent("survey.edit.tab.go_edit") );
      out.write("\" title=\"");
      out.print( lang.getContent("survey.edit.tab.go_edit") );
      out.write("\" id=\"tab-display-questions\"><i class=\"fa fa-pencil-square-o fa-2x\"></i></a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t  \t\t\t\t</div>\r\n");
      out.write("\t  \t\t\t\t<div class=\"content-box-tabs edit-content\">\r\n");
      out.write("\t  \t\t\t\t\t<div class=\"browser-left\">Hello</div>\t\r\n");
      out.write("\t  \t\t\t\t\t<div class=\"edit-survey-frame survey-info noborder\" id=\"survey-name-title\" sid=\"");
      out.print( survey.getSurveyId() );
      out.write("\">\r\n");
      out.write("\t\t  \t\t\t\t\t\t\r\n");
      out.write("\t\t  \t\t\t\t\t\t<div class=\"widthTitleSurveyCollapsed\" id=\"survey-name-title-div\">\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t<div class=\"form-group nomargin\">\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t\t<h3 class=\"textalignleft\">");
      out.print( title );
      out.write("</h3>\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t  \t\t\t\t\t</div>\t\t\t\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t  \t\t\t\t\t</div>\t\r\n");
      out.write("\t  \t\t\t\t\t\t<div class=\"content edit-fees-frame paddingbotton50\">\r\n");
      out.write("\t  \t\t\t\t\t\t\t\t<h4 class=\"textalignleft\">");
      out.print( lang.getContent("quota.title.section1") );
      out.write("</h4>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<p class=\"textalignleft\">");
      out.print( lang.getContent("quota.text.section1") );
      out.write("</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"survey-objetive quotaobjetivesurvey\" id=\"survey-objetive\">\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t\t<label for=\"survey-language-version\" class=\"\" ><span>");
      out.print( lang.getContent("survey.fees.label.objective") );
      out.write("</span></label>\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t\t");
 String valueobjetive="";
		  									if(survey.getObjetive()>0){
		  										valueobjetive = (String.valueOf(survey.getObjetive()));
		  									} 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<input id=\"objetivesurveys\" name=\"objetivesurveys\" type=\"number\" placeholder=\"none\" class=\"form-control-small with100px\" value=\"");
      out.print(valueobjetive );
      out.write("\" sid=\"");
      out.print(survey.getSurveyId() );
      out.write("\" min=\"1\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t");
      out.print( lang.getContent("survey.fees.label.surveys") );
      out.write("\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>  \t\t\t\t\t\t  \t\t\r\n");
      out.write("\t  \t\t\t\t\t\t<div class=\"edit-survey-head\">\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t\r\n");
      out.write("\t\t  \t\t\t\t\t\t\r\n");
      out.write("\t\t  \t\t\t\t\t</div>\r\n");
      out.write("\t\t  \t\t\t\t\t\r\n");
      out.write("\t\t  \t\t\t\t\t<div id=\"listcompletequotas\" class=\"edit-fees-frame\">\r\n");
      out.write("\t\t  \t\t\t\t\t\t<h4 class=\"textalignleft\">");
      out.print( lang.getContent("quota.title.section2") );
      out.write("</h4>\r\n");
      out.write("\t\t\t\t\t\t\t\t<p class=\"textalignleft\">");
      out.print( lang.getContent("quota.text.section2") );
      out.write("</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t  \t\t\t\t\t");

		  						List<Question> listQuestionAvaibles = new ArrayList();
		  						String titleQuestion="";
		  						List<Section> sections = survey.getSections();
								int i = 1;
								for(Section section : sections)
								{					
									String title22 = "Section " + i;
									if(section.getContents().containsKey(DBConstants.s_VALUE_CONTENTTYPE_NAME_TITLE))
									{
										title = section.getContents().get(DBConstants.s_VALUE_CONTENTTYPE_NAME_TITLE).getText();
									}
									for(Page pag : section.getPages())
									{
										String token = "/";
			  							List<Question> questions = pag.getQuestions();
			  							if(questions != null && !questions.isEmpty()){
			  								for(Question question : questions){
			  									if(question.getQuestionType().equals("simple")||question.getQuestionType().equals("multiple")){
			  										if(question.getOptionsGroups()!=null && question.getOptionsGroups().size()>0)
			  										listQuestionAvaibles.add(question);
			  									}
			  									
			  									
			  								}
			  							
			  							}
									}
									
									i++;
								}
							 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t\t\t \t");
  List<Quota> listQuotas = (List<Quota>) request.getAttribute(Attribute.s_LIST_QUOTAS);
							 	Quota quotaold=null;
							 	

							 	request.setAttribute("listQuestionFees",listQuestionAvaibles);
						 		
							 	List<Integer> listQuestionAvaiblesNoVisible = new ArrayList();
							 	
							 	for(Quota quota:listQuotas){
							 		if(quotaold==null || (quota.getIdQuestion()!=quotaold.getIdQuestion())){
							 				request.setAttribute("index",quota.getIdQuestion());
							 				listIdQuestion.put(quota.getIdQuestion(), quota.getIdQuestion());
							 				listQuestionAvaiblesNoVisible.add(Integer.valueOf(quota.getIdQuestion()));
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t \t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../components/cQuota.jsp", out, false);
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t \t\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\t\t\t\t\t\t \t\t\t\tloadvaluequestion(");
      out.print(quota.getIdQuestion());
      out.write(");\r\n");
      out.write("\t\t\t\t\t\t\t\t \t\t\t</script>\r\n");
      out.write("\t\t\t\t\t\t\t \t");

							 		}
							 		quotaold=quota;
							 	}
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t \t\r\n");
      out.write("\t\t\t\t\t\t\t \t");
 request.setAttribute("listQuestionNoVisible",listQuestionAvaiblesNoVisible);
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t \t\r\n");
      out.write("\t\t  \t\t\t\t\t\r\n");
      out.write("\t\t  \t\t\t\t\t\r\n");
      out.write("\t\t  \t\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../components/cQuotaNew.jsp", out, false);
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"center marginbotton10px\" id=\"add-fees\">\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t<label for=\"btn-add-quota\" class=\"visuallyhidden\">");
      out.print( lang.getContent("quota.add.new") );
      out.write("</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t<button class=\"btn btn-primary btn-sm active\" id=\"btn-add-quota\"><i class=\"fa fa-plus-square\"></i><span>");
      out.print( lang.getContent("quota.add.new") );
      out.write("</span></button>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t  \t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t  \t\t\t\t</div>\r\n");
      out.write("\t  \t\t\t\t\r\n");
      out.write("\t  \t\t\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\t\t\t$(document).ready(function() {\r\n");
      out.write("\t\t\t\t\t\t\t");
for (Integer key : listIdQuestion.keySet()) {
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t$('#selquestionforfees");
      out.print(key);
      out.write("').val(");
      out.print(listIdQuestion.get(key));
      out.write(");\r\n");
      out.write("\t\t\t\t\t\t\t\tloadvaluequestion(");
      out.print(key);
      out.write(");\r\n");
      out.write("\t\t\t\t\t\t\t");
}
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t  \t\t\t\t</script>\r\n");
      out.write("\t  \t\t\t\t\r\n");
      out.write("\t  \t\t\t\t\r\n");

lang.close();

      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../frames/fDeleteElement.jsp", out, false);
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../frames/fNewQuota.jsp", out, false);
      out.write("\r\n");
      out.write("\t  \t\t\t");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
