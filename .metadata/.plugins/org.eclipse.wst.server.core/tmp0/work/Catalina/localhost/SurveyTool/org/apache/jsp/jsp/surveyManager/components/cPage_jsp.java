/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.27
 * Generated at: 2016-10-06 11:27:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.surveyManager.components;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import ilu.surveytool.databasemanager.DataObject.Question;
import java.util.List;
import ilu.surveytool.constants.Address;
import ilu.surveytool.language.Language;
import ilu.surveytool.constants.Attribute;
import ilu.surveytool.databasemanager.DataObject.Page;

public final class cPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("ilu.surveytool.constants.Address");
    _jspx_imports_classes.add("ilu.surveytool.language.Language");
    _jspx_imports_classes.add("ilu.surveytool.databasemanager.DataObject.Page");
    _jspx_imports_classes.add("ilu.surveytool.databasemanager.DataObject.Question");
    _jspx_imports_classes.add("ilu.surveytool.constants.Attribute");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

Language lang = new Language(getServletContext().getRealPath("/")); 
lang.loadLanguage(Language.getLanguageRequest(request));

Page pag = (Page) request.getAttribute(Attribute.s_PAGE);
request.setAttribute(Attribute.s_NUM_PAGE, pag.getNumPage());

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<li class=\"page\" id=\"page\" pid=\"");
      out.print( pag.getPageId() );
      out.write("\" index=\"");
      out.print( pag.getNumPage() );
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"page-head row\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-3\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<button id=\"page-display-");
      out.print( pag.getPageId() );
      out.write("\" class=\"page-display btn-transparent panel-heading-display-arrow display-page-arrow\"><span class=\"visuallyhidden\">Hide page: Page ");
      out.print( pag.getNumPage() );
      out.write("</span><i class=\"fa fa-caret-down fa-2x\" aria-hidden=\"true\"></i></button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<h4 class=\"col-md-6\">");
      out.print( lang.getContent("survey.edit.page.title") + " " + pag.getNumPage() );
      out.write("</h4>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t");
 if((boolean)request.getAttribute(Attribute.s_ADD_QUESTIONS)){ 
      out.write("\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-3 right\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t");
 if(pag.getNumPage() > 1) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<button class=\"remove-page-break\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t");
      out.print( lang.getContent("button.remove_pagebreak") );
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"page-body\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" id=\"pageid1\" value=\"");
      out.print( pag.getPageId() );
      out.write("\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<ul class=\"panel-body page-items connectedSortable\" id=\"page-items\">\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t  \t\t\t\t\t\t");

							  							String token = "/";
							  							List<Question> questions = pag.getQuestions();
							  							if(questions != null && !questions.isEmpty())
							  							{
							  								for(Question question : questions)
							  								{
							  									request.setAttribute(Attribute.s_QUESTION, question);
							  									request.setAttribute(Attribute.s_TEMPLATE_FILE, question.getTemplatePage());
							  						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response,  token + Address.s_EDIT_QUESTION_MASTER , out, false);
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t  \t\t\t\t\t\t");
			
							  								}
							  							}
							  						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t  \t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t  \t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t");
 if((boolean)request.getAttribute(Attribute.s_ADD_QUESTIONS)){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../editQuestions/cAddMenu.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("pageId", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf( pag.getPageId() ), request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</li>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
