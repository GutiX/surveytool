/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.27
 * Generated at: 2016-10-06 11:24:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.common.bodyPages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import ilu.surveytool.language.Language;
import ilu.surveytool.databasemanager.DataObject.LoginResponse;
import ilu.surveytool.databasemanager.DataObject.RegisterResponse;
import ilu.surveytool.constants.Attribute;
import ilu.surveytool.constants.Parameter;

public final class bLogin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("ilu.surveytool.language.Language");
    _jspx_imports_classes.add("ilu.surveytool.constants.Parameter");
    _jspx_imports_classes.add("ilu.surveytool.databasemanager.DataObject.RegisterResponse");
    _jspx_imports_classes.add("ilu.surveytool.databasemanager.DataObject.LoginResponse");
    _jspx_imports_classes.add("ilu.surveytool.constants.Attribute");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

LoginResponse loginResponse = (LoginResponse) request.getAttribute(Attribute.s_LOGIN_RESPONSE);
Language lang = new Language(getServletContext().getRealPath("/")); 
lang.loadLanguage(Language.getLanguageRequest(request));

      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"container-fluid\">\r\n");
      out.write("\t  \t\t\t\t<!-- <div class=\"title-content\">\r\n");
      out.write("\t  \t\t\t\t\t<h2>");
      out.print( lang.getContent("home.title") );
      out.write("</h2>\t  \t\t\t\t\t\r\n");
      out.write("\t  \t\t\t\t</div>  -->\r\n");
      out.write("\t  \t\t\t\t<div class=\"login-content\">\r\n");
      out.write("\t  \t\t\t\t\t<div class=\"login-content-text\">\r\n");
      out.write("\t  \t\t\t\t\t\t<p>This service offers a suite of accessible tools for improving consumer-developers connections. Current version includes:</p>\r\n");
      out.write("\t  \t\t\t\t\t\t<ul>\r\n");
      out.write("\t  \t\t\t\t\t\t\t<li>An <strong>online survey tool</strong> for building accessible forms. Developers can create and share accessible surveys to collect consumers information on the context of use, validate product ideas of evaluate low-fi prototypes.</li>\r\n");
      out.write("\t  \t\t\t\t\t\t\t<li>An <strong>online polling tool</strong> allowing accessible electronic voting. Polls are an appealing way of collecting usersâ€™ feedback on existing or future products. For example, polls can be used as a \"future feature vote\" mechanism for gathering new ideas from the end-users. Accessible polls can be embedded in blogs, websites or product pages using iframes, or share through a URL.</li>\r\n");
      out.write("\t  \t\t\t\t\t\t</ul>\r\n");
      out.write("\t  \t\t\t\t\t\t<p>Future versions of the accessible user feedback tool will include:</p>\r\n");
      out.write("\t  \t\t\t\t\t\t<ul>\r\n");
      out.write("\t  \t\t\t\t\t\t\t<li><strong>User reviews widget.</strong> A widget allowing for user star-rating and comments to provide feedback to developers and vendors on their products and services. This is also an accessible mechanism allowing consumers to exchange information among themselves about accessible and/or assistive products and services.</li>\r\n");
      out.write("\t  \t\t\t\t\t\t\t<li><strong>Accessible user panel management.</strong> A system providing a dashboard for managing user database. This may be linked to other user feedback tools to foster and manage user participation.</li>\r\n");
      out.write("\t  \t\t\t\t\t\t</ul>\r\n");
      out.write("\t  \t\t\t\t\t</div>\r\n");
      out.write("  \t\t\t\t\t\t<div class=\"login-frame\" id=\"loginDivForm\">\r\n");
      out.write("\t  \t\t\t\t\t\t<form method=\"post\" id=\"loginForm\" action=\"LoginServlet\">\r\n");
      out.write("\t  \t\t\t\t\t\t\t<fieldset>\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t<!-- <h3>Login</h3> -->\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t<legend>");
      out.print( lang.getContent("home.login.title") );
      out.write("</legend>\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t");

		  							if(loginResponse != null && !loginResponse.isValid())
		  							{
		  								System.out.println("Login response: " + loginResponse.toString());
		  							
      out.write("\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t<div class=\"error-msg\"><p>");
      out.print( lang.getContent(loginResponse.getErrorMsg()) );
      out.write("</p></div>\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t");

		  							}		  							
		  							
      out.write("\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t\t<label class=\"control-label\" for=\"username\"> ");
      out.print( lang.getContent("home.login.label.username") );
      out.write("</label>\r\n");
      out.write("\t\t\t  \t\t\t\t\t\t\t<input type=\"text\" id=\"username\" name=\"");
      out.print( Parameter.s_USERNAME );
      out.write("\" class=\"form-control\"/>\r\n");
      out.write("\t\t\t  \t\t\t\t\t\t\t<span  id='username-feedback' class='glyphicon glyphicon-remove form-control-feedback hidden' aria-hidden='true'></span>\r\n");
      out.write("\t\t\t  \t\t\t\t\t\t\t<span id='username-error' class='error hidden'>");
      out.print( lang.getContent("msg.error.login.empty.username") );
      out.write("</span>\r\n");
      out.write("\t\t\t  \t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t  \t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t  \t\t\t\t\t\t\t<label class=\"control-label\" for=\"password\"> ");
      out.print( lang.getContent("home.login.label.password") );
      out.write("</label>\r\n");
      out.write("\t\t\t  \t\t\t\t\t\t\t<input type=\"password\" id=\"password\" name=\"");
      out.print( Parameter.s_PASSWORD );
      out.write("\" class=\"form-control\"/>\t\t\t  \t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t  \t\t\t\t\t\t\t<span id='password-feedback' class='glyphicon glyphicon-remove form-control-feedback hidden' aria-hidden='true'></span>\r\n");
      out.write("\t\t\t  \t\t\t\t\t\t\t<span id='password-error' class='error hidden'>");
      out.print( lang.getContent("msg.error.login.empty.password") );
      out.write("</span>\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t</div>\t\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t<div class=\"login-button\">\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t\t<input type=\"button\" id=\"loginSubmit\" class=\"btn btn-primary btn-block btn-survey\" value=\"");
      out.print( lang.getContent("button.login") );
      out.write("\" />\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t</div>  \r\n");
      out.write("\t\t  \t\t\t\t\t\t\t\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t<div class=\"login-button\">\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t\t<input type=\"button\" id=\"registerFormBtn\" class=\"btn btn-block btn-survey\" value=\"");
      out.print( lang.getContent("button.register") );
      out.write("\" onclick=\"showHideRegister(true)\"/>\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t</div>  \t\r\n");
      out.write("\t\t  \t\t\t\t\t\t</fieldset>\t\t\t\t\t\t\r\n");
      out.write("\t  \t\t\t\t\t\t</form>\r\n");
      out.write("\t  \t\t\t\t\t</div>\r\n");
      out.write("\t  \t\t\t\t\t\r\n");
      out.write("\t  \t\t\t\t\t");

						RegisterResponse registerResponse = (RegisterResponse) request.getAttribute(Attribute.s_REGISTER_RESPONSE);
			  								
						
      out.write("\r\n");
      out.write("\t  \t\t\t\t\t<div class=\"register-frame\" id=\"registerDivForm\">\r\n");
      out.write("\t  \t\t\t\t\t\t<form method=\"post\" id=\"registerForm\" action=\"RegisterServlet\">\r\n");
      out.write("\t  \t\t\t\t\t\t\t<fieldset>\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t<!-- <h3>Login</h3> -->\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t<legend>");
      out.print( lang.getContent("home.register.title") );
      out.write("</legend>\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t");

		  							if(registerResponse != null && !registerResponse.isValid())
		  							{
		  							
      out.write("\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t<div class=\"error-msg\"><p>");
      out.print( lang.getContent(registerResponse.getErrorMsg()) );
      out.write("</p></div>\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t");

		  							}		  							
		  							
      out.write("\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t\t<label class=\"control-label\" for=\"usernameregister\"> ");
      out.print( lang.getContent("home.register.label.username") );
      out.write("</label>\r\n");
      out.write("\t\t\t  \t\t\t\t\t\t\t<input type=\"text\" id=\"usernameregister\" name=\"");
      out.print( Parameter.s_USERNAME );
      out.write("\" class=\"form-control\"/>\r\n");
      out.write("\t\t\t  \t\t\t\t\t\t\t<span  id='usernameregister-feedback' class='glyphicon glyphicon-remove form-control-feedback hidden' aria-hidden='true'></span>\r\n");
      out.write("\t\t\t  \t\t\t\t\t\t\t<span id='usernameregister-error' class='error hidden'>");
      out.print( lang.getContent("msg.error.login.empty.username") );
      out.write("</span>\r\n");
      out.write("\t\t\t  \t\t\t\t\t\t\t<span id='usernameregisterlength-feedback' class='glyphicon glyphicon-remove form-control-feedback hidden' aria-hidden='true'></span>\r\n");
      out.write("\t\t\t  \t\t\t\t\t\t\t<span id='usernameregisterlength-error' class='error hidden'>");
      out.print( lang.getContent("msg.error.login.username.length") );
      out.write("</span>\r\n");
      out.write("\t\t\t  \t\t\t\t\t\t</div>\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t\t<label class=\"control-label\" for=\"email\"> ");
      out.print( lang.getContent("home.register.label.email") );
      out.write("</label>\r\n");
      out.write("\t\t\t  \t\t\t\t\t\t\t<input type=\"text\" id=\"email\" name=\"");
      out.print( Parameter.s_EMAIL );
      out.write("\" class=\"form-control\"/>\r\n");
      out.write("\t\t\t  \t\t\t\t\t\t\t<span  id='email-feedback' class='glyphicon glyphicon-remove form-control-feedback hidden' aria-hidden='true'></span>\r\n");
      out.write("\t\t\t  \t\t\t\t\t\t\t<span id='email-error' class='error hidden'>");
      out.print( lang.getContent("msg.error.login.email") );
      out.write("</span>\r\n");
      out.write("\t\t\t  \t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t  \t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t  \t\t\t\t\t\t\t<label class=\"control-label\" for=\"password\"> ");
      out.print( lang.getContent("home.register.label.password") );
      out.write("</label>\r\n");
      out.write("\t\t\t  \t\t\t\t\t\t\t<input type=\"password\" id=\"passwordregister\" name=\"");
      out.print( Parameter.s_PASSWORD );
      out.write("\" class=\"form-control\"/>\t\t\t  \t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t  \t\t\t\t\t\t\t<span id='passwordregister-feedback' class='glyphicon glyphicon-remove form-control-feedback hidden' aria-hidden='true'></span>\r\n");
      out.write("\t\t\t  \t\t\t\t\t\t\t<span id='passwordregister-error' class='error hidden'>");
      out.print( lang.getContent("msg.error.login.empty.password") );
      out.write("</span>\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t</div>\t\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t  \t\t\t\t\t\t\t<label class=\"control-label\" for=\"repassword\"> ");
      out.print( lang.getContent("home.register.label.repassword") );
      out.write("</label>\r\n");
      out.write("\t\t\t  \t\t\t\t\t\t\t<input type=\"password\" id=\"repasswordregister\" name=\"");
      out.print( Parameter.s_REPASSWORD );
      out.write("\" class=\"form-control\"/>\t\t\t  \t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t  \t\t\t\t\t\t\t<span id='repasswordregister-feedback' class='glyphicon glyphicon-remove form-control-feedback hidden' aria-hidden='true'></span>\r\n");
      out.write("\t\t\t  \t\t\t\t\t\t\t<span id='repasswordregister-error' class='error hidden'>");
      out.print( lang.getContent("msg.error.login.repassword") );
      out.write("</span>\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t</div>\t\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t<div class=\"login-button\">\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t\t<input type=\"button\" id=\"registerSubmit\" class=\"btn btn-primary btn-block btn-survey\" value=\"");
      out.print( lang.getContent("home.register.label.registeruser") );
      out.write("\" />\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t</div>  \t\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t<div class=\"login-button\">\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t\t<input type=\"button\" id=\"backLogin\" class=\"btn btn-block btn-survey\" value=\"");
      out.print( lang.getContent("home.register.label.login") );
      out.write("\" onclick=\"showHideRegister(false)\"/>\r\n");
      out.write("\t\t  \t\t\t\t\t\t\t</div>  \r\n");
      out.write("\t\t  \t\t\t\t\t\t</fieldset>\t\t\t\t\t\t\r\n");
      out.write("\t  \t\t\t\t\t\t</form>\r\n");
      out.write("\t  \t\t\t\t\t</div>\r\n");
      out.write("  \t\t\t\t\t</div>\t  \t\t\t\t\r\n");
      out.write("\t  \t\t\t</div>\r\n");
      out.write("\t  \t\t\t\r\n");
      out.write("\t  \t\t\t\r\n");
      out.write("\t  \t\t\t\r\n");

lang.close();
if(registerResponse!=null){				  									

      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("showHideRegister(true);\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
}
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
