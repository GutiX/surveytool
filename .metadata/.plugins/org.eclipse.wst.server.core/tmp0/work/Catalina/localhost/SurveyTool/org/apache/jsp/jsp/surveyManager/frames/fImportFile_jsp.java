/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.27
 * Generated at: 2016-10-06 11:27:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.surveyManager.frames;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import ilu.surveymanager.handler.ResourceHandler;
import ilu.surveytool.databasemanager.DataObject.ResourceType;
import java.util.List;
import ilu.surveytool.language.Language;
import ilu.surveytool.constants.Attribute;
import ilu.surveytool.databasemanager.DataObject.Content;
import java.util.HashMap;
import ilu.surveytool.databasemanager.DataObject.Survey;
import ilu.surveytool.databasemanager.DataObject.Resource;

public final class fImportFile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("ilu.surveytool.databasemanager.DataObject.ResourceType");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("ilu.surveymanager.handler.ResourceHandler");
    _jspx_imports_classes.add("ilu.surveytool.language.Language");
    _jspx_imports_classes.add("ilu.surveytool.databasemanager.DataObject.Survey");
    _jspx_imports_classes.add("ilu.surveytool.databasemanager.DataObject.Content");
    _jspx_imports_classes.add("java.util.HashMap");
    _jspx_imports_classes.add("ilu.surveytool.databasemanager.DataObject.Resource");
    _jspx_imports_classes.add("ilu.surveytool.constants.Attribute");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

Survey survey = (Survey) request.getAttribute(Attribute.s_SURVEY_INFO); 

Language lang = new Language(getServletContext().getRealPath("/")); 
lang.loadLanguage(Language.getLanguageRequest(request));
System.out.println("fImportFile opened");

      out.write("\t\t\r\n");
      out.write("\t\t\t\t<!-- Modal -->\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t<div class=\"modal fade survey-win\" id=\"importFile\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n");
      out.write("\t\t\t\t\t<div class=\"modal-dialog import-file-win-dialog\" role=\"document\">\r\n");
      out.write("\t\t\t\t    \t<div class=\"panel panel-primary left\"> \r\n");
      out.write("\t\t\t\t    \t\t<div class=\"panel-heading\"> \r\n");
      out.write("\t\t\t\t        \t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\r\n");
      out.write("\t\t\t\t    \t\t\t<h2 class=\"panel-title\">");
      out.print( lang.getContent("file.import.title") );
      out.write("</h2> \r\n");
      out.write("\t\t\t\t    \t\t</div> \r\n");
      out.write("\t\t\t\t    \t\t<div class=\"panel-body\">\r\n");
      out.write("\t\t\t\t    \t\t\t<div class=\"survey-frame\" id=\"import-multimedia-file\">\r\n");
      out.write("\t\t\t\t    \t\t\t\t<h3>");
      out.print( lang.getContent("file.import.selection.title") );
      out.write("</h3>\r\n");
      out.write("\r\n");
      out.write("\t\t\t    \t\t\t\t\t<form method=\"POST\" action=\"ImportFileServlet\" id=\"importFileForm\" enctype=\"multipart/form-data\">\r\n");
      out.write("\t\t\t    \t\t\t\t\t\t<div id=\"selectFiteType\" class=\"form-group file-type\">\r\n");
      out.write("\t\t\t    \t\t\t\t\t\t\t<label for=\"fileType\">");
      out.print( lang.getContent("file.import.label.select.type") );
      out.write("</label>\r\n");
      out.write("\t\t\t    \t\t\t\t\t\t\t<select id=\"fileType\" class=\"form-control resource-type-select\">\r\n");
      out.write("\t\t\t    \t\t\t\t\t\t\t\t<option value=\"none\">");
      out.print( lang.getContent("file.import.label.select.none") );
      out.write("</option>\r\n");
      out.write("\t\t\t    \t\t\t\t\t\t\t");

			    								ResourceHandler resourceHandler = new ResourceHandler(); 
			    								List<ResourceType> resourceTypes = resourceHandler.getResourceTypes();
			    								for(ResourceType resourceType : resourceTypes)
			    								{
			    							
      out.write("\r\n");
      out.write("\t\t\t    \t\t\t\t\t\t\t\t<option value=\"");
      out.print( resourceType.getName() );
      out.write('"');
      out.write('>');
      out.print( resourceType.getName().substring(0, 1).toUpperCase() + resourceType.getName().substring(1) );
      out.write("</option>\t\t\t    \t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t    \t\t\t\t\t\t\t");

			    								}
			    							
      out.write("\r\n");
      out.write("\t\t\t    \t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t    \t\t\t\t\t\t</div>\t\t\t    \t\t\t\t\t\r\n");
      out.write("\t\t\t    \t\t\t\t\t\t<div id=\"selectFile\" class=\"hidden\">\t\t\t    \t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t        <div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t        \t<label for=\"uploadedFile\">");
      out.print( lang.getContent("file.import.label.input") );
      out.write("</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t            <input type=\"file\" name=\"uploadedFile\" class=\"form-control\" id=\"uploadedFile\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t        </div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div id=\"optionsFile\" class=\"hidden\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div id=\"optionsVideoFile\" class=\"hidden\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../components/cImportVideoOptions.jsp", out, false);
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t    \t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t    \t\t\t\t\t\t\t\t    \t\t\t\t\r\n");
      out.write("\t\t\t\t    \t\t\t</div>\t\t\t\t    \t\t\t\r\n");
      out.write("\t\t\t\t    \t\t</div>\r\n");
      out.write("\t\t\t\t    \t</div>\r\n");
      out.write("\t\t\t\t  \t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");

lang.close();

      out.write("\r\n");
      out.write("\t  \t\t\t");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
